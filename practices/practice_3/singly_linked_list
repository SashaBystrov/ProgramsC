// Вариант 9
#include <iostream>
#include <windows.h>

using namespace std;

struct Date {
    short day;
    short month;
    short year;
};

struct TableData {
    char lastname[20];
    char namebook[20];
    short year;
    char group;
    struct Date date;
};

struct node {
    TableData data;
    struct node* next;
};

struct node* head;
struct node* tail;
int countel = 0;


void printDate(short day, short month, short year, int wl) {
    int w = 10;
    int delta = (wl - w) / 2 - 1;
    cout << left;
    cout.width(delta); cout << " ";
    if (day > 9) {
        cout << day;
    }
    else {
        cout << "0" << day;
    }
    cout << ".";
    if (month > 9) {
        cout << month;
    }
    else {
        cout << "0" << month;
    }
    cout << ".";
    cout << year;
    cout.width(delta); cout << " ";
}

void DrawList(struct TableData* lines) {
    int width = 87;  
    cout << endl;	cout.width(width + 1); cout.fill('-'); cout << "-" << endl;
    cout.fill(' '); cout.width(width);  cout << left << "|Каталог библиотеки"; cout << "|" << endl;
    cout.width(width + 1); cout.fill('-'); cout << "-" << endl;
    cout.fill(' ');
    cout << left << "|     Автор книги    ";
    cout << left << "|     Название   ";
    cout << left << "| Год выпуска";
    cout << left << "| Группа";
    cout << left << " | Дата подписания рукописи ";
    cout << "|" << endl;
    cout.width(width + 1); cout.fill('-'); cout << "-" << endl;
    cout.fill(' ');
    struct node* current = head;
    while (current)
    {
        cout << left << "|"; cout.width(20); cout << left << current->data.lastname;
        cout << left << "|"; cout.width(16); cout << left << current->data.namebook;
        cout << left << "|"; cout.width(12); cout << left << current->data.year;
        cout << left << "|"; cout.width(8); cout << left << current->data.group;
        cout << left << "|";
        printDate(current->data.date.day, current->data.date.month, current->data.date.year, 28);
        cout << "|" << endl;
        current = current->next;
    }

    cout.width(width + 1); cout.fill('-'); cout << "-" << endl;
    cout.fill(' '); cout.width(width);  cout << left << "|Примечание: Х – худож. лит-ра; У - учебная лит-ра; С - справочная лит-ра. "; cout << "|" << endl;
    cout.width(width + 1); cout.fill('-'); cout << "-" << endl;
}

void pushEl(TableData data)
{
    struct node* newel = new node();
    newel->data = data;
    if (countel == 0) {
        newel->next = NULL;
    }
    else
    {
        newel->next = head;
    }
    head = newel;
    countel++;
}

void insertItem(int index, TableData data) {
    if (!(index >= 0 && index <= countel && countel >= 0))
        return;
    if (index == 0) {
        pushEl(data);
    }
    else {
        struct node* current = head;
        for (int i = 0; i < index; i++) {
            current = current->next;
        }
        struct node* newItem = new node();
        newItem->data = data;
        newItem->next = current->next;
        current->next = newItem;
        countel++;
    }
}

void printList()
{
    struct node* current = head;
    while (current)
    {
        cout << "============================================" << endl;
        cout << "Автор книги - " << current->data.lastname << endl;
        cout << "Название - " << current->data.namebook << endl;
        cout << "Год выпуска - " << current->data.year << endl;
        cout << "Группа - " << current->data.group << endl;
        cout << "Дата подписания рукописи - " << current->data.date.day << "\t" << current->data.date.month << "\t" \
            << current->data.date.year << endl;
        cout << "============================================" << endl;
        current = current->next;
    }
}

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    struct TableData lines[3];

    lines[0] = { " Сенкевич ", " Потоп ", 1978, 'X', {11,11,2020} };
    lines[1] = { " Ландау ", " Механика ", 1989, 'Y', {11,11,2020} };
    lines[2] = { " Дойль ", " Сумчатые ", 1990, 'C', {12,12,2010} };

    int vel;
    int ind = -1;
    struct TableData newElchange;

    pushEl(lines[0]);
    pushEl(lines[1]);
    pushEl(lines[2]);

    printList();

    cout << "Введите целочисленное значение: " << endl;
    cin >> vel;

    struct node* current = head;

    for (int i = 0; i < countel; i++)
    {
        if (current->data.year == vel)
        {
            cout << "Введите новую струтуру" << endl;
            cout << "Фамилия - ";
            cin >> newElchange.lastname;
            cout << "Название книги - ";
            cin >> newElchange.namebook;
            cout << "Год выпуска книги - ";
            cin >> newElchange.year;
            cout << "Группа - ";
            cin >> newElchange.group;
            cout << "День - ";
            cin >> newElchange.date.day;
            cout << "Месяц - ";
            cin >> newElchange.date.month;
            cout << "Год - ";
            cin >> newElchange.date.year;
            ind = i;
        }
        current = current->next;
    }
    if (ind != -1)
    {
        insertItem(ind, newElchange);
        printList();
    }
    else {
        cout << "Нет такого int значения" << endl;
    }
}


